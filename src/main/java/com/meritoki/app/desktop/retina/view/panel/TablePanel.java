/*
 * Copyright 2021 Joaquin Osvaldo Rodriguez
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.meritoki.app.desktop.retina.view.panel;

import java.awt.event.ActionEvent;

import javax.swing.AbstractAction;
import javax.swing.Action;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.meritoki.app.desktop.retina.model.Model;
import com.meritoki.app.desktop.retina.model.document.Document;
import com.meritoki.app.desktop.retina.model.document.Page;
import com.meritoki.app.desktop.retina.model.document.Shape;
import com.meritoki.app.desktop.retina.model.document.Table;
import com.meritoki.app.desktop.retina.model.document.Text;
import com.meritoki.app.desktop.retina.view.frame.MainFrame;

/**
 *
 * @author osvaldo.rodriguez
 */
public class TablePanel extends javax.swing.JPanel {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4834508823328218806L;
	private static Logger logger = LogManager.getLogger(TablePanel.class.getName());
	private Model model = null;
	private MainFrame main = null;

	/**
	 * Creates new form Table
	 */
	public TablePanel() {
		initComponents();

	}

	public void setModel(Model m) {
		this.model = m;
		this.init();

	}

	public void init() {
		logger.debug("init()");
		this.initDataTable();
		System.out.println(this.model.document.getPage());
		if (this.model.document.getPage() != null) {
			this.model.system.matrix = this.model.document.getPage().getMatrix();
			Action action = new AbstractAction() {
				public void actionPerformed(ActionEvent e) {
					TableCellListener tcl = (TableCellListener) e.getSource();
					int row = tcl.getRow();
					int column = tcl.getColumn();
					Shape shape = model.document.getPage().getMatrix().getShape(row, column);
					shape.addText(new Text((String) tcl.getNewValue()));
				}
			};
			TableCellListener tcl = new TableCellListener(this.dataTable, action);
			this.dataTable.setDefaultRenderer(Object.class, new TableRenderer(this.model));
		}

	}

	public void initDataTable() {
		logger.debug("initDataTable()");
		Document document = (this.model != null) ? this.model.document : null;
		Page page = (document != null) ? document.getPage() : null;
		Table table = (page != null) ? page.getTable() : null;
		if (table != null) {
			this.dataTable.setModel(table.getDefaultTableMode());
		} else {
			this.dataTable.setModel(new javax.swing.table.DefaultTableModel(new Object[0][0], new Object[0]));
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		dataTable = new javax.swing.JTable();

		dataTable
				.setModel(new javax.swing.table.DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null } },
						new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
		jScrollPane1.setViewportView(dataTable);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE)
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
						.addContainerGap()));
	}// </editor-fold>//GEN-END:initComponents

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JTable dataTable;
	private javax.swing.JScrollPane jScrollPane1;
	// End of variables declaration//GEN-END:variables
}
//
//public void initDataTable() {
//	logger.debug("initDataTable()");
//	Document document = (this.model != null) ? this.model.document : null;
//	Page page = (document != null) ? document.getPage() : null;
//	Table table = page.getTable();
//	if (page != null) {
//		
////		Object[][] objectMatrix = parser.parseData(page.getShapeMatrixShapeList());
////		Object[] stringArray = parser.parseColumn(page.getShapeMatrixShapeList());
//		Object[] objectArray = table.getObjectArray();
//		DefaultTableModel model = new javax.swing.table.DefaultTableModel((Object[][])objectArray[1], (Object[])objectArray[0]);
//		this.dataTable.setModel(model);
////                    this.dataTable.getColumnModel().getColumn(4).setPreferredWidth(30);
////                    this.dataTable.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
////                    this.dataTable = new JTable(objectMatrix,stringArray);
////		this.repaint();
//	}
//}
