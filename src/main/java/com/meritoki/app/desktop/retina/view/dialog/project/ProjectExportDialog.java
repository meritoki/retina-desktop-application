/*
 * Copyright 2021 Joaquin Osvaldo Rodriguez
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.meritoki.app.desktop.retina.view.dialog.project;

import com.meritoki.app.desktop.retina.view.dialog.image.*;
import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.meritoki.app.desktop.retina.model.Model;
import com.meritoki.app.desktop.retina.view.frame.MainFrame;

/**
 *
 * @author jorodriguez
 */
public class ProjectExportDialog extends javax.swing.JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3779061389380871856L;
	private static Logger logger = LogManager.getLogger(ProjectExportDialog.class.getName());
	private Model model;
	private MainFrame mainFrame;

	/**
	 * Creates new form Import
	 */
	public ProjectExportDialog(java.awt.Frame parent, boolean flag, Model model) {
		super(parent, flag);
		this.mainFrame = (MainFrame) parent;
		this.model = model;
		this.initComponents();
		this.imageFileChooser.setSelectedFile(new File(this.model.system.defaultProjectFileName));
		this.result();
	}

	public void result() {
		this.imageFileChooser.setMultiSelectionEnabled(true);
		int result = this.imageFileChooser.showSaveDialog(null);
		if (result == JFileChooser.APPROVE_OPTION) {
			File file = this.imageFileChooser.getSelectedFile();
			logger.info("result() file="+file);
			if (this.model != null) {
				String[] fileArray = new String[1];
				fileArray[0] = file.getAbsolutePath();
				this.model.cache.fileArray = fileArray;
				try {
					this.model.pattern.execute("createProject");
				} catch (Exception e) {
					e.printStackTrace();
					JOptionPane.showMessageDialog(mainFrame, e.getMessage(), "Error",
							JOptionPane.ERROR_MESSAGE);
				}
				this.mainFrame.init();
//				this.mainFrame.repaint();
			}
			this.setVisible(false);
		} else if (result == JFileChooser.CANCEL_OPTION) {
			logger.info("Cancel");
			this.setVisible(false);
		}
	}
	
//	public void result() {
//		this.imageFileChooser.setMultiSelectionEnabled(true);
//		int result = this.imageFileChooser.showSaveDialog(null);
//		if (result == JFileChooser.APPROVE_OPTION) {
//			File[] files = this.imageFileChooser.getSelectedFiles();
//			if (this.model != null) {
//				String[] fileArray = new String[files.length];
//				for (int i = 0; i < files.length; i++) {
//				   fileArray[i] = files[i].getAbsolutePath();
//				}
//				this.model.cache.fileArray = fileArray;
//				try {
//					this.model.pattern.execute("createProject");
//				} catch (Exception e) {
//					e.printStackTrace();
//					JOptionPane.showMessageDialog(mainFrame, e.getMessage(), "Error",
//							JOptionPane.ERROR_MESSAGE);
//				}
//				this.mainFrame.init();
////				this.mainFrame.repaint();
//			}
//			this.setVisible(false);
//		} else if (result == JFileChooser.CANCEL_OPTION) {
//			logger.info("Cancel");
//			this.setVisible(false);
//		}
//	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imageFileChooser = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(imageFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(imageFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ProjectExportDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ProjectExportDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ProjectExportDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ProjectExportDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				ProjectExportDialog dialog = new ProjectExportDialog(new javax.swing.JFrame(), true, new Model());
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser imageFileChooser;
    // End of variables declaration//GEN-END:variables
}
