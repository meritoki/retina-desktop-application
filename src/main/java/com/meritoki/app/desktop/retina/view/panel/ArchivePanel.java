/*
 * Copyright 2021 Joaquin Osvaldo Rodriguez
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.meritoki.app.desktop.retina.view.panel;

import java.awt.Graphics;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.meritoki.app.desktop.retina.model.Model;
import com.meritoki.app.desktop.retina.model.document.Archive;
import com.meritoki.app.desktop.retina.model.document.Document;
import com.meritoki.app.desktop.retina.model.document.Page;

/**
 *
 * @author osvaldo.rodriguez
 */
public class ArchivePanel extends javax.swing.JPanel {

    /**
	 * 
	 */
	private static final long serialVersionUID = -4686022365967082684L;
	private static Logger logger = LogManager.getLogger(ArchivePanel.class.getName());
    private Model model = null;

    /**
     * Creates new form Document
     */
    public ArchivePanel() {
        initComponents();
        this.archiveTextArea.setEditable(false);
    }

    public void setModel(Model model) {
        this.model = model;
        this.init();
    }
    
	public void init() {
		logger.debug("init()");
		this.repaint();
		this.revalidate();
	}
    
    public void paint(Graphics graphics) {
    	super.paint(graphics);
		Document document = (this.model != null) ? this.model.document : null;
		Page page = (document != null) ? document.getPage() : null;
		Archive archive = (page != null)? page.getArchive(): null;
		if(archive != null) {
			this.archiveTextArea.setText(null);
			for(String string: archive.stringList) {
				this.archiveTextArea.append(string);
				this.archiveTextArea.append("\n");
			}
		}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        archiveTextArea = new javax.swing.JTextArea();

        archiveTextArea.setColumns(20);
        archiveTextArea.setRows(5);
        jScrollPane1.setViewportView(archiveTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 881, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea archiveTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
