/*
 * Copyright 2021 Joaquin Osvaldo Rodriguez
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.meritoki.app.desktop.retina.view.dialog;

import java.awt.Color;

import javax.swing.JButton;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.meritoki.app.desktop.retina.model.Model;
import com.meritoki.app.desktop.retina.model.tool.Tool;
import com.meritoki.app.desktop.retina.view.frame.MainFrame;

/**
 *
 * @author jorodriguez
 */
public class ToolDialog extends javax.swing.JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8568719400393263608L;
	/**
	 * Logger for class.
	 */
	static Logger logger = LogManager.getLogger(ToolDialog.class.getName());
	/**
	 * Model for class.
	 */
	private Model model = null;
	/**
	 * Reference to Main Frame
	 */
	private MainFrame mainFrame = null;
    /**
     * Creates new form ToolDialog
     */
    public ToolDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.setTitle("Tool");
		this.mainFrame = (MainFrame) parent;
        initComponents();
    }
    
	public void setModel(Model model) {
		this.model = model;
	}
	
	public void init() {
		this.initButton();
	}
	
	public void initButton() {
		Tool tool = this.model.system.tool;
		if(tool != null) {
			JButton defaultButton = new JButton();
			switch(tool) {
			case GUIDE: {
				this.guideButton.setBackground(Color.GREEN);
				this.drawButton.setBackground(defaultButton.getBackground());
				this.selectButton.setBackground(defaultButton.getBackground());
				this.moveButton.setBackground(defaultButton.getBackground());
				this.resizeButton.setBackground(defaultButton.getBackground());
				break;
			}
			case DRAW:{
				this.guideButton.setBackground(defaultButton.getBackground());
				this.drawButton.setBackground(Color.GREEN);
				this.selectButton.setBackground(defaultButton.getBackground());
				this.moveButton.setBackground(defaultButton.getBackground());
				this.resizeButton.setBackground(defaultButton.getBackground());
				break;
			}
			case SELECT: {
				this.guideButton.setBackground(defaultButton.getBackground());
				this.drawButton.setBackground(defaultButton.getBackground());
				this.selectButton.setBackground(Color.GREEN);
				this.moveButton.setBackground(defaultButton.getBackground());
				this.resizeButton.setBackground(defaultButton.getBackground());
				break;
			}
			case MOVE: {
				this.guideButton.setBackground(defaultButton.getBackground());
				this.drawButton.setBackground(defaultButton.getBackground());
				this.selectButton.setBackground(defaultButton.getBackground());
				this.moveButton.setBackground(Color.GREEN);
				this.resizeButton.setBackground(defaultButton.getBackground());
				break;
			}
			case RESIZE: {
				this.guideButton.setBackground(defaultButton.getBackground());
				this.drawButton.setBackground(defaultButton.getBackground());
				this.selectButton.setBackground(defaultButton.getBackground());
				this.moveButton.setBackground(defaultButton.getBackground());
				this.resizeButton.setBackground(Color.GREEN);
				break;
			}
			}
		}
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drawButton = new javax.swing.JButton();
        selectButton = new javax.swing.JButton();
        moveButton = new javax.swing.JButton();
        resizeButton = new javax.swing.JButton();
        guideButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        drawButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Draw.png"))); // NOI18N
        drawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawButtonActionPerformed(evt);
            }
        });

        selectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Selector.png"))); // NOI18N
        selectButton.setMaximumSize(new java.awt.Dimension(32, 32));
        selectButton.setMinimumSize(new java.awt.Dimension(32, 32));
        selectButton.setPreferredSize(new java.awt.Dimension(32, 32));
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        moveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Move.png"))); // NOI18N
        moveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveButtonActionPerformed(evt);
            }
        });

        resizeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resize.png"))); // NOI18N
        resizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resizeButtonActionPerformed(evt);
            }
        });

        guideButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Guide.png"))); // NOI18N
        guideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guideButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guideButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(drawButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(moveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resizeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guideButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(drawButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(moveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resizeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void drawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawButtonActionPerformed
        this.model.system.tool = Tool.DRAW;
        this.init();
    }//GEN-LAST:event_drawButtonActionPerformed

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        this.model.system.tool = Tool.SELECT;
        this.init();
    }//GEN-LAST:event_selectButtonActionPerformed

    private void moveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveButtonActionPerformed
    	this.model.system.tool = Tool.MOVE;
    	this.init();
    }//GEN-LAST:event_moveButtonActionPerformed

    private void resizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resizeButtonActionPerformed
        this.model.system.tool = Tool.RESIZE;
        this.init();
    }//GEN-LAST:event_resizeButtonActionPerformed

    private void guideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guideButtonActionPerformed
        this.model.system.tool = Tool.GUIDE;
        this.init();
    }//GEN-LAST:event_guideButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ToolDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ToolDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ToolDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ToolDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ToolDialog dialog = new ToolDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton drawButton;
    private javax.swing.JButton guideButton;
    private javax.swing.JButton moveButton;
    private javax.swing.JButton resizeButton;
    private javax.swing.JButton selectButton;
    // End of variables declaration//GEN-END:variables
}
